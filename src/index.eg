require:
   "@cycle/dom" as cycle-dom

provide:
   h
   percent as [%]

h = match ->
   String? s -> s
   ENode? {tags => {}, => props, => children} and enode -> enode.to-string()
   ENode? {=> tags, => props, => children} ->
      cycle-dom.h(tags.join(""), props) with
         children each match child ->
            == null or == undefined -> continue
            ENode? {=> tags, => props, => children} -> h(child)
            else -> child

   else -> h(div %)

HyperNode = (tags, props, Array! children) ->
   cycle-dom.h(tags.join(""), props, children)

macro{HyperNode} percent = #data{x, y} ->
   let {=> HyperNode} = @deps
   `[^x % ^y] where ENode = [^HyperNode]`
